@charset "UTF-8";
/* 暂时停用
// Dropdowns
*/
/* 暂时停用
// Pagination
// Pager
// Jumbotron
// Form states and alerts
// Cards
// Tooltips
// Popovers
// Labels
*/
/* 暂时停用
// Alerts
// Progress bars
*/
/* 暂时停用
// Code
*/
.product-detailImg {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background-color: black;
  z-index: -1;
}

.product-detailImg.in {
  z-index: 2000;
}

.no-scroll {
  overflow: hidden;
  -ms-touch-action: none;
      touch-action: none;
}

.text-left {
  text-align: left;
}

.input-engraving {
  background-color: white;
  border-color: #007afc;
}

.input-engraving.disabled {
  background-color: #f8f8f8;
  border: 1px solid #f8f8f8;
}

.btn-itemProperty {
  color: #36405b;
  background-color: transparent;
  border-color: #e2e5ed;
}

.btn-itemProperty:hover {
  color: #36405b;
  background-color: transparent;
  border-color: #e2e5ed;
}

.btn-itemProperty:focus, .btn-itemProperty.focus {
  color: #36405b;
  background-color: transparent;
  border-color: #e2e5ed;
}

.btn-itemProperty.disabled:focus, .btn-itemProperty.disabled.focus, .btn-itemProperty:disabled:focus, .btn-itemProperty:disabled.focus {
  background-color: transparent;
  border-color: #e2e5ed;
}

.btn-itemProperty.disabled:hover, .btn-itemProperty:disabled:hover {
  background-color: transparent;
  border-color: #e2e5ed;
}

.btn-itemProperty.disabled {
  color: #9fa0a0;
  border-color: #efefef;
}

.btn-itemProperty.active {
  color: #fff;
  background-color: #374146;
  border-color: #374146;
}

.btn-itemProperty.active:hover {
  color: #fff;
  background-color: #374146;
  border-color: #374146;
}

.btn-itemProperty.active:focus, .btn-itemProperty.active.focus {
  color: #fff;
  background-color: #374146;
  border-color: #374146;
}

.btn-itemProperty.active.disabled:focus, .btn-itemProperty.active.disabled.focus, .btn-itemProperty.active:disabled:focus, .btn-itemProperty.active:disabled.focus {
  background-color: #374146;
  border-color: #374146;
}

.btn-itemProperty.active.disabled:hover, .btn-itemProperty.active:disabled:hover {
  background-color: #374146;
  border-color: #374146;
}

.icon-checkcircle.active {
  color: #f39345 !important;
}

.message-info {
  max-height: 3.5rem;
  height: auto;
  overflow: hidden;
}

.message-info.active {
  max-height: none;
}

/*# sourceMappingURL=data:application/json;base64, */
