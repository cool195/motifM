@charset "UTF-8";
/* 暂时停用
// Dropdowns
*/
/* 暂时停用
// Pagination
// Pager
// Jumbotron
// Form states and alerts
// Cards
// Tooltips
// Popovers
// Labels
*/
/* 暂时停用
// Alerts
// Progress bars
*/
/* 暂时停用
// Code
*/
.warning-info {
  background-color: #FFFFFF;
}

.warning-info.off {
  display: none;
}

.cardform-container {
  overflow: hidden;
}

.cardinfo-label {
  margin-bottom: 0;
  padding-right: 10px;
  font-size: 12px;
}

.cardinfo-wrapper,
.cardinfo-item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  background-color: #fff;
}

.cardinfo-item {
  position: relative;
  padding: .9375rem;
  height: 48px;
  border-bottom: solid 1px #e2e5ed;
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
              -ms-grid-row-align: stretch;
          align-items: stretch;
}

.cardinfo-item ~ .cardinfo-item {
  border-left: solid 1px #e2e5ed;
}

/*# sourceMappingURL=data:application/json;base64, */
